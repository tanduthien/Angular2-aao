{
  "_args": [
    [
      {
        "raw": "lockfile@https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
        "scope": null,
        "escapedName": "lockfile",
        "name": "lockfile",
        "rawSpec": "https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
        "type": "remote"
      },
      "/home/tandt/Projects/aao-client"
    ]
  ],
  "_from": "lockfile@>=1.0.1 <2.0.0",
  "_id": "lockfile@1.0.2",
  "_inCache": true,
  "_location": "/lockfile",
  "_phantomChildren": {},
  "_requested": {
    "raw": "lockfile@https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
    "scope": null,
    "escapedName": "lockfile",
    "name": "lockfile",
    "rawSpec": "https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/typings-core"
  ],
  "_resolved": "https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
  "_shasum": "97e1990174f696cbe0a3acd58a43b84aa30c7c83",
  "_shrinkwrap": null,
  "_spec": "lockfile@https://registry.npmjs.org/lockfile/-/lockfile-1.0.2.tgz",
  "_where": "/home/tandt/Projects/aao-client",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/lockfile/issues"
  },
  "dependencies": {},
  "description": "A very polite lock file utility, which endeavors to not litter, and to wait patiently for others.",
  "devDependencies": {
    "tap": "^7.1.2",
    "touch": "0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/isaacs/lockfile#readme",
  "keywords": [
    "lockfile",
    "lock",
    "file",
    "fs",
    "O_EXCL"
  ],
  "license": "ISC",
  "main": "lockfile.js",
  "name": "lockfile",
  "optionalDependencies": {},
  "readme": "# lockfile\n\nA very polite lock file utility, which endeavors to not litter, and to\nwait patiently for others.\n\n## Usage\n\n```javascript\nvar lockFile = require('lockfile')\n\n// opts is optional, and defaults to {}\nlockFile.lock('some-file.lock', opts, function (er) {\n  // if the er happens, then it failed to acquire a lock.\n  // if there was not an error, then the file was created,\n  // and won't be deleted until we unlock it.\n\n  // do my stuff, free of interruptions\n  // then, some time later, do:\n  lockFile.unlock('some-file.lock', function (er) {\n    // er means that an error happened, and is probably bad.\n  })\n})\n```\n\n## Methods\n\nSync methods return the value/throw the error, others don't.  Standard\nnode fs stuff.\n\nAll known locks are removed when the process exits.  Of course, it's\npossible for certain types of failures to cause this to fail, but a best\neffort is made to not be a litterbug.\n\n### lockFile.lock(path, [opts], cb)\n\nAcquire a file lock on the specified path\n\n### lockFile.lockSync(path, [opts])\n\nAcquire a file lock on the specified path\n\n### lockFile.unlock(path, cb)\n\nClose and unlink the lockfile.\n\n### lockFile.unlockSync(path)\n\nClose and unlink the lockfile.\n\n### lockFile.check(path, [opts], cb)\n\nCheck if the lockfile is locked and not stale.\n\nCallback is called with `cb(error, isLocked)`.\n\n### lockFile.checkSync(path, [opts])\n\nCheck if the lockfile is locked and not stale.\n\nReturns boolean.\n\n## Options\n\n### opts.wait\n\nA number of milliseconds to wait for locks to expire before giving up.\nOnly used by lockFile.lock.  Poll for `opts.wait` ms.  If the lock is\nnot cleared by the time the wait expires, then it returns with the\noriginal error.\n\n### opts.pollPeriod\n\nWhen using `opts.wait`, this is the period in ms in which it polls to\ncheck if the lock has expired.  Defaults to `100`.\n\n### opts.stale\n\nA number of milliseconds before locks are considered to have expired.\n\n### opts.retries\n\nUsed by lock and lockSync.  Retry `n` number of times before giving up.\n\n### opts.retryWait\n\nUsed by lock.  Wait `n` milliseconds before retrying.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/lockfile.git"
  },
  "scripts": {
    "changelog": "bash gen-changelog.sh",
    "postversion": "npm run changelog && git add CHANGELOG.md && git commit -m 'update changelog - '${npm_package_version}",
    "test": "tap test/*.js --cov"
  },
  "version": "1.0.2"
}
