{
  "_args": [
    [
      {
        "raw": "make-error@https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
        "scope": null,
        "escapedName": "make-error",
        "name": "make-error",
        "rawSpec": "https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
        "spec": "https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
        "type": "remote"
      },
      "/home/tandt/Projects/aao-client"
    ]
  ],
  "_from": "make-error@>=1.2.0 <2.0.0",
  "_id": "make-error@1.2.1",
  "_inCache": true,
  "_location": "/make-error",
  "_phantomChildren": {},
  "_requested": {
    "raw": "make-error@https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
    "scope": null,
    "escapedName": "make-error",
    "name": "make-error",
    "rawSpec": "https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
    "spec": "https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/make-error-cause"
  ],
  "_resolved": "https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
  "_shasum": "9a6dfb4844423b9f145806728d05c6e935670e75",
  "_shrinkwrap": null,
  "_spec": "make-error@https://registry.npmjs.org/make-error/-/make-error-1.2.1.tgz",
  "_where": "/home/tandt/Projects/aao-client",
  "author": {
    "name": "Julien Fontanet",
    "email": "julien.fontanet@isonoe.net"
  },
  "bugs": {
    "url": "https://github.com/JsCommunity/make-error/issues"
  },
  "dependencies": {},
  "description": "Make your own error types!",
  "devDependencies": {
    "browserify": "^13.0.0",
    "chai": "^3.3.0",
    "mocha": "^3.0.0",
    "standard": "^8.0.0",
    "testling": "^1.7.1",
    "uglify-js": "^2.4.19"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "homepage": "https://github.com/JsCommunity/make-error",
  "keywords": [
    "custom",
    "derive",
    "Error",
    "extend",
    "inherit"
  ],
  "license": "ISC",
  "name": "make-error",
  "optionalDependencies": {},
  "readme": "# make-error\n\n[![Build Status](https://img.shields.io/travis/JsCommunity/make-error/master.svg)](http://travis-ci.org/JsCommunity/make-error)\n[![Dependency Status](https://david-dm.org/JsCommunity/make-error/status.svg?theme=shields.io)](https://david-dm.org/JsCommunity/make-error)\n[![devDependency Status](https://david-dm.org/JsCommunity/make-error/dev-status.svg?theme=shields.io)](https://david-dm.org/JsCommunity/make-error#info=devDependencies)\n\n> Make your own error types!\n\n\n## Features\n\n- Compatible Node & browsers\n- `instanceof` support\n- `error.name` & `error.stack` support\n- compatible with [CSP](https://en.wikipedia.org/wiki/Content_Security_Policy) (i.e. no `eval()`)\n\n## Installation\n\n### Node & Browserify\n\nInstallation of the [npm package](https://npmjs.org/package/make-error):\n\n```\n> npm install --save make-error\n```\n\nThen require the package:\n\n```javascript\nvar makeError = require('make-error');\n```\n\n### Browser\n\nClone the git repository and compile the browser version of the\nlibrary:\n\n```\n> git clone https://github.com/JsCommunity/make-error.git\n> npm install\n> npm run browserify\n```\n\nThen import the script `make-error.js` which has been compiled in the\n`dist/` directory:\n\n```html\n<script src=\"make-error.js\"></script>\n```\n\n## Usage\n\n### Basic named error\n\n```javascript\nvar CustomError = makeError('CustomError')\n\n// Parameters are forwarded to the super class (here Error).\nthrow new CustomError('a message')\n```\n\n### Advanced error class\n\n```javascript\nfunction CustomError (customValue) {\n  CustomError.super.call(this, 'custom error message')\n\n  this.customValue = customValue\n}\nmakeError(CustomError)\n\n// Feel free to extend the prototype.\nCustomError.prototype.myMethod = function CustomError$myMethod () {\n  console.log('CustomError.myMethod (%s, %s)', this.code, this.message)\n}\n\n//-----\n\ntry {\n  throw new CustomError(42)\n} catch (error) {\n  error.myMethod()\n}\n```\n\n### Specialized error\n\n```javascript\nvar SpecializedError = makeError('SpecializedError', CustomError);\n\nthrow new SpecializedError(42);\n```\n\n### Inheritance\n\n> Best for ES6.\n\n```javascript\nimport {BaseError} from 'make-error'\n\nclass CustomError extends BaseError {\n  constructor () {\n    super('custom error message')\n  }\n}\n```\n\n## Related\n\n- [make-error-cause](https://www.npmjs.com/package/make-error-cause): Make your own error types, with a cause!\n\n## Contributions\n\nContributions are *very* welcomed, either on the documentation or on\nthe code.\n\nYou may:\n\n- report any [issue](https://github.com/JsCommunity/make-error/issues)\n  you've encountered;\n- fork and create a pull request.\n\n## License\n\nISC Â© [Julien Fontanet](http://julien.isonoe.net)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/JsCommunity/make-error.git"
  },
  "scripts": {
    "browserify": "mkdir -p dist && browserify -s makeError index.js | uglifyjs -c > dist/make-error.js",
    "dev-test": "mocha --watch --reporter=min index.spec.js",
    "test": "standard && mocha index.spec.js",
    "test-browser": "testling -u"
  },
  "testling": {
    "harness": "mocha-bdd",
    "files": "index.spec.js",
    "browsers": [
      "ie/8..Latest",
      "chrome/latest",
      "firefox/latest"
    ]
  },
  "version": "1.2.1"
}
